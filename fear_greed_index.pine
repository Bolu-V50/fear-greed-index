//@version=5
indicator("恐惧贪婪指数 (每日更新)", overlay=false)

// 更新时间: 2025-10-14 01:53

var float[] values = array.new_float()
var int[] dates = array.new_int()

if barstate.isfirst
    array.push(dates, timestamp(2025, 10, 14))
    array.push(values, 38)
    array.push(dates, timestamp(2025, 10, 13))
    array.push(values, 38)
    array.push(dates, timestamp(2025, 10, 12))
    array.push(values, 24)
    array.push(dates, timestamp(2025, 10, 11))
    array.push(values, 27)
    array.push(dates, timestamp(2025, 10, 10))
    array.push(values, 64)
    array.push(dates, timestamp(2025, 10, 9))
    array.push(values, 70)
    array.push(dates, timestamp(2025, 10, 8))
    array.push(values, 60)
    array.push(dates, timestamp(2025, 10, 7))
    array.push(values, 70)
    array.push(dates, timestamp(2025, 10, 6))
    array.push(values, 71)
    array.push(dates, timestamp(2025, 10, 5))
    array.push(values, 74)
    array.push(dates, timestamp(2025, 10, 4))
    array.push(values, 71)
    array.push(dates, timestamp(2025, 10, 3))
    array.push(values, 63)
    array.push(dates, timestamp(2025, 10, 2))
    array.push(values, 64)
    array.push(dates, timestamp(2025, 10, 1))
    array.push(values, 49)
    array.push(dates, timestamp(2025, 9, 30))
    array.push(values, 50)
    array.push(dates, timestamp(2025, 9, 29))
    array.push(values, 50)
    array.push(dates, timestamp(2025, 9, 28))
    array.push(values, 37)
    array.push(dates, timestamp(2025, 9, 27))
    array.push(values, 33)
    array.push(dates, timestamp(2025, 9, 26))
    array.push(values, 28)
    array.push(dates, timestamp(2025, 9, 25))
    array.push(values, 44)
    array.push(dates, timestamp(2025, 9, 24))
    array.push(values, 44)
    array.push(dates, timestamp(2025, 9, 23))
    array.push(values, 43)
    array.push(dates, timestamp(2025, 9, 22))
    array.push(values, 45)
    array.push(dates, timestamp(2025, 9, 21))
    array.push(values, 49)
    array.push(dates, timestamp(2025, 9, 20))
    array.push(values, 48)
    array.push(dates, timestamp(2025, 9, 19))
    array.push(values, 53)
    array.push(dates, timestamp(2025, 9, 18))
    array.push(values, 52)
    array.push(dates, timestamp(2025, 9, 17))
    array.push(values, 53)
    array.push(dates, timestamp(2025, 9, 16))
    array.push(values, 52)
    array.push(dates, timestamp(2025, 9, 15))
    array.push(values, 53)
    array.push(dates, timestamp(2025, 9, 14))
    array.push(values, 55)
    array.push(dates, timestamp(2025, 9, 13))
    array.push(values, 52)
    array.push(dates, timestamp(2025, 9, 12))
    array.push(values, 57)
    array.push(dates, timestamp(2025, 9, 11))
    array.push(values, 54)
    array.push(dates, timestamp(2025, 9, 10))
    array.push(values, 49)
    array.push(dates, timestamp(2025, 9, 9))
    array.push(values, 48)
    array.push(dates, timestamp(2025, 9, 8))
    array.push(values, 51)
    array.push(dates, timestamp(2025, 9, 7))
    array.push(values, 44)
    array.push(dates, timestamp(2025, 9, 6))
    array.push(values, 48)
    array.push(dates, timestamp(2025, 9, 5))
    array.push(values, 48)
    array.push(dates, timestamp(2025, 9, 4))
    array.push(values, 51)
    array.push(dates, timestamp(2025, 9, 3))
    array.push(values, 55)
    array.push(dates, timestamp(2025, 9, 2))
    array.push(values, 49)
    array.push(dates, timestamp(2025, 9, 1))
    array.push(values, 46)
    array.push(dates, timestamp(2025, 8, 31))
    array.push(values, 48)
    array.push(dates, timestamp(2025, 8, 30))
    array.push(values, 39)
    array.push(dates, timestamp(2025, 8, 29))
    array.push(values, 50)
    array.push(dates, timestamp(2025, 8, 28))
    array.push(values, 48)
    array.push(dates, timestamp(2025, 8, 27))
    array.push(values, 51)
    array.push(dates, timestamp(2025, 8, 26))
    array.push(values, 48)
    array.push(dates, timestamp(2025, 8, 25))
    array.push(values, 47)
    array.push(dates, timestamp(2025, 8, 24))
    array.push(values, 53)
    array.push(dates, timestamp(2025, 8, 23))
    array.push(values, 60)
    array.push(dates, timestamp(2025, 8, 22))
    array.push(values, 50)
    array.push(dates, timestamp(2025, 8, 21))
    array.push(values, 50)
    array.push(dates, timestamp(2025, 8, 20))
    array.push(values, 44)
    array.push(dates, timestamp(2025, 8, 19))
    array.push(values, 56)
    array.push(dates, timestamp(2025, 8, 18))
    array.push(values, 60)
    array.push(dates, timestamp(2025, 8, 17))
    array.push(values, 64)
    array.push(dates, timestamp(2025, 8, 16))
    array.push(values, 56)
    array.push(dates, timestamp(2025, 8, 15))
    array.push(values, 60)
    array.push(dates, timestamp(2025, 8, 14))
    array.push(values, 75)
    array.push(dates, timestamp(2025, 8, 13))
    array.push(values, 73)
    array.push(dates, timestamp(2025, 8, 12))
    array.push(values, 68)
    array.push(dates, timestamp(2025, 8, 11))
    array.push(values, 70)
    array.push(dates, timestamp(2025, 8, 10))
    array.push(values, 69)
    array.push(dates, timestamp(2025, 8, 9))
    array.push(values, 67)
    array.push(dates, timestamp(2025, 8, 8))
    array.push(values, 74)
    array.push(dates, timestamp(2025, 8, 7))
    array.push(values, 62)
    array.push(dates, timestamp(2025, 8, 6))
    array.push(values, 54)
    array.push(dates, timestamp(2025, 8, 5))
    array.push(values, 60)
    array.push(dates, timestamp(2025, 8, 4))
    array.push(values, 64)
    array.push(dates, timestamp(2025, 8, 3))
    array.push(values, 53)
    array.push(dates, timestamp(2025, 8, 2))
    array.push(values, 55)
    array.push(dates, timestamp(2025, 8, 1))
    array.push(values, 65)
    array.push(dates, timestamp(2025, 7, 31))
    array.push(values, 72)
    array.push(dates, timestamp(2025, 7, 30))
    array.push(values, 74)
    array.push(dates, timestamp(2025, 7, 29))
    array.push(values, 73)
    array.push(dates, timestamp(2025, 7, 28))
    array.push(values, 75)
    array.push(dates, timestamp(2025, 7, 27))
    array.push(values, 73)
    array.push(dates, timestamp(2025, 7, 26))
    array.push(values, 72)
    array.push(dates, timestamp(2025, 7, 25))
    array.push(values, 70)
    array.push(dates, timestamp(2025, 7, 24))
    array.push(values, 71)
    array.push(dates, timestamp(2025, 7, 23))
    array.push(values, 74)
    array.push(dates, timestamp(2025, 7, 22))
    array.push(values, 72)
    array.push(dates, timestamp(2025, 7, 21))
    array.push(values, 71)
    array.push(dates, timestamp(2025, 7, 20))
    array.push(values, 72)
    array.push(dates, timestamp(2025, 7, 19))
    array.push(values, 74)
    array.push(dates, timestamp(2025, 7, 18))
    array.push(values, 73)
    array.push(dates, timestamp(2025, 7, 17))
    array.push(values, 74)

getValue() =>
    result = 50.0
    currentDate = timestamp(year, month, dayofmonth)
    for i = 0 to array.size(dates) - 1
        if array.get(dates, i) == currentDate
            result := array.get(values, i)
            break
    result

fgi = getValue()
ma7 = ta.sma(fgi, 7)
ma30 = ta.sma(fgi, 30)

getColor(v) =>
    v <= 25 ? color.red : v <= 45 ? color.orange : v <= 55 ? color.yellow : v <= 75 ? color.green : color.rgb(0,200,0)

plot(fgi, "Fear & Greed", color=getColor(fgi), linewidth=3)
plot(ma7, "MA7", color=color.blue, linewidth=1)
plot(ma30, "MA30", color=color.purple, linewidth=1)

bgcolor(fgi <= 25 ? color.new(color.red, 95) : na)
bgcolor(fgi > 25 and fgi <= 45 ? color.new(color.orange, 95) : na)
bgcolor(fgi > 45 and fgi <= 55 ? color.new(color.yellow, 95) : na)
bgcolor(fgi > 55 and fgi <= 75 ? color.new(color.green, 95) : na)
bgcolor(fgi > 75 ? color.new(color.green, 90) : na)

hline(25, "极度恐惧", color=color.red, linestyle=hline.style_dotted)
hline(45, "恐惧", color=color.orange, linestyle=hline.style_dotted)
hline(55, "中性", color=color.gray, linestyle=hline.style_dotted)
hline(75, "贪婪", color=color.green, linestyle=hline.style_dotted)
hline(0, "Min", color=color.gray)
hline(100, "Max", color=color.gray)

var table infoTable = table.new(position.top_right, 2, 4)
if barstate.islast
    table.cell(infoTable, 0, 0, "当前指数", bgcolor=color.navy, text_color=color.white)
    table.cell(infoTable, 1, 0, str.tostring(fgi, "#"), bgcolor=getColor(fgi), text_color=color.white)
    table.cell(infoTable, 0, 1, "7日均线", text_color=color.blue)
    table.cell(infoTable, 1, 1, str.tostring(ma7, "#"), text_color=color.blue)
    table.cell(infoTable, 0, 2, "30日均线", text_color=color.purple)
    table.cell(infoTable, 1, 2, str.tostring(ma30, "#"), text_color=color.purple)
    table.cell(infoTable, 0, 3, "更新日期", text_color=color.gray)
    table.cell(infoTable, 1, 3, "2025-10-14", text_color=color.gray)
